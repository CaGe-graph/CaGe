
# CaGe, the Chemical & abstract Graph environment
#
# - configuration file -

# There is a substitution mechanism for configuration values --
# substitutions start with $, then some opening bracket, then the
# corresponding closing bracket.
# 
# To substitute environment variables, such as PATH, use the format
# (e.g.) ${PATH} for PATH, the braces {} are required.
# 
# To substitute Java system properties, use angle brackets [] -- note:
# the 'cage.sh' script tries to set a system property called CaGe.InstallDir
# to the installation directory.
# 
# To substitute other configuration values from this file, use parentheses ()
# -- be sure to avoid circular substitutions.


# If this is true (or yes or 1), let user edit generator and embedder commands
# and suppress the warning about Rasmol's unreliability.
CaGe.ExpertMode:	false


# In the following settings (those starting with "CaGe."), three
# directories are frequently mentioned:
# - The "install directory", where CaGe is installed (this very file
#   is in the install directory). 'cage.sh' finds out where this is and
#   creates a system property that contains an absolute path to it.
#   This is used wherever $[CaGe.InstallDir] is mentioned in this file.
#   (Should CaGe not find out its install directory, which we only
#   expect if CaGe is not started by the "cage.sh" script, the
#   start directory is assumed to be the install directory.)
# - The "start directory", from where the call to start CaGe is issued.
# - "RunDir", which CaGe subprocesses change into before generators and
#   embedders are run, and where CaGe also looks for files to read or save.
#   This is the next configuration option in this file.
# Keep these three places in mind and don't be confused by the fact
# that by default, RunDir is set to "." which makes it equal to the
# start directory.

# RunDir is where generator and embedder processes are run --
# saved data files, log or error output files are also found here.
# - This directory is relative to the start directory (cf. above).
# - The default "." is probably what users expect -- they can save
#   files and after finishing CaGe will find them in the directory
#   where they made the call. The programmer would however recommend
#   some absolute location below the install directory, as CaGe can
#   create quite a few files with quite long names rather quickly.
#   The installation includes an empty subdirectory called "Data"
#   and here, commented out, is a setting for RunDir that uses it.
# CaGe.Generators.RunDir:		$[CaGe.InstallDir]/Data
CaGe.Generators.RunDir:		.

# The search path used for generator and embedder processes, as well as
# any other pipes started by entering file names starting with '|'.
# - Separate path entries by space, not by ':' or ';' or whatever.
# - The search path is relative to RunDir, not to the start directory.
CaGe.Generators.Path:		$[CaGe.InstallDir]/Generators ${PATH}

# A file for generators' stderr output, relative to the start directory.
# CaGe tries to delete this at the end, even if no generator was ever run.
# If you ever want to keep a generator's stderr output, copy or move this
# file before starting another generator or exiting CaGe.
CaGe.Generators.ErrFile:	$(CaGe.Generators.RunDir)/generation.log

# LibDir is the directory where the Java native libraries are stored --
# actually not directly there, but in a subdirectory whose name is
# returned by the method SysInfo.get("os.name").
# You won't normally have to change this value.
# LibDir must not contain ${...} substitutions.
CaGe.Native.LibDir:		$[CaGe.InstallDir]/Native


# The number of digits to expect in a graph number.
CaGe.GraphNoDigits:	6
# Should the settings in steps 2 (generator options) and 3 (output options)
# be remembered? (output options seperately for each generator)
CaGe.RememberSettings:	true
# The number of graphs and the maximum time (in milliseconds)
# after which the graph number in the results window should be updated
# while "flowing".
CaGe.GraphNoFireInterval.Foreground:	100
CaGe.GraphNoFirePeriod.Foreground:	1000
# The same for background tasks.
CaGe.GraphNoFireInterval.Background:	10
CaGe.GraphNoFirePeriod.Background:	10000


# The output formats known to CaGe.
CaGe.Writers.2D:	Writegraph CML
CaGe.Writers.3D:	Writegraph CML PDB
CaGe.Writers.Adjacency:	Planar Writegraph
# The cage.writer.WriterFactory class creates writers
# out of these format - by searching for classes named
# cage.writer.[Native?]<format>Writer extending cage.writer.CaGeWriter,
# or <format> itself as a class name.


# The generators used by CaGe.
CaGe.Generators:	ThreeRegularPlaneGraphs FourRegularPlaneGraphs HCgen TubesCones PlantriT PlantriQ PlantriP External
# Each entry in this list must be further described in this file -
# caution: the same "name space" is used here for generators and viewers.


# Each generator must be desribed futher by a set of options named
# after the generator -- here are the required options:
# - its title in the selection window
##Fullgen.Title:		general fullerenes
# - the Java class that communicates the generator's options to CaGe
#   (must extend CaGe.GeneratorPanel)
##Fullgen.ConfigPanel:	cage.generator.FullgenPanel
# - 2D and 3D viewers suitable for this generator
##Fullgen.Viewers.2D:	TwoView
##Fullgen.Viewers.3D:	MiniJmolViewer RasmolViewer
# - "xD" viewers are displayed for both 2D and 3D
##Fullgen.Viewers.xD:	TextViewer
# The three viewer lists must be present even if empty.
# This option tells CaGe whether to include this generator
# as a "model" for embedding external data. Default is true.
##Fullgen.ForExternal:	true

TubesCones.Title:	tubes and cones
TubesCones.ConfigPanel:	cage.generator.TubesConesPanel
TubesCones.Viewers.2D:	TwoView
TubesCones.Viewers.3D:	CaGeJmolViewer RasmolViewer
TubesCones.Viewers.xD:	TextViewer
TubesCones.ForExternal:	true

ThreeRegularPlaneGraphs.Title:          3-regular plane graphs
ThreeRegularPlaneGraphs.ConfigPanel:	cage.generator.ThreeRegularPlaneGraphsPanel
ThreeRegularPlaneGraphs.Viewers.2D:	TwoView
ThreeRegularPlaneGraphs.Viewers.3D:	MiniJmolViewer RasmolViewer
ThreeRegularPlaneGraphs.Viewers.xD:	TextViewer
ThreeRegularPlaneGraphs.ForExternal:	true

FourRegularPlaneGraphs.Title:          4-regular plane graphs
FourRegularPlaneGraphs.ConfigPanel:	cage.generator.FourRegularPlaneGraphsPanel
FourRegularPlaneGraphs.Viewers.2D:	TwoView
FourRegularPlaneGraphs.Viewers.3D:	MiniJmolViewer RasmolViewer
FourRegularPlaneGraphs.Viewers.xD:	TextViewer
FourRegularPlaneGraphs.ForExternal:	true

HCgen.Title:		hydrocarbons
HCgen.ConfigPanel:	cage.generator.HCgenPanel
HCgen.Viewers.2D:	TwoView
HCgen.Viewers.3D:	MiniJmolViewer RasmolViewer
HCgen.Viewers.xD:	TextViewer
HCgen.ForExternal:	true
# This extra option is read by the HCgen generator panel.
# It affects the TwoView viewer's ability to react to mouse clicks
# inside a face, asking for a new embedding in which this face
# becomes the exterior one. The default for HCgen is false.
# For generators not having this option, expect the default to be true,
# but this actually depends on the generator panel's implementation.
HCgen.EnableReembed2D:	false


PlantriT.Title:		triangulations
PlantriT.ConfigPanel:	cage.generator.TriangulationsPanel
PlantriT.Viewers.2D:	TwoView
PlantriT.Viewers.3D:	MiniJmolViewer RasmolViewer
PlantriT.Viewers.xD:	TextViewer
PlantriT.ForExternal:	true
# See HCgen above for an explanation of this option.
PlantriT.Disk.EnableReembed2D:	false

PlantriQ.Title:		quadrangulations
PlantriQ.ConfigPanel:	cage.generator.QuadrangulationsPanel
PlantriQ.Viewers.2D:	TwoView
PlantriQ.Viewers.3D:	MiniJmolViewer RasmolViewer
PlantriQ.Viewers.xD:	TextViewer
PlantriQ.ForExternal:	true
# See HCgen above for an explanation of this option.
PlantriQ.Disk.EnableReembed2D:	false


PlantriP.Title:		general plane graphs
PlantriP.ConfigPanel:	cage.generator.GeneralPlaneGraphsPanel
PlantriP.Viewers.2D:	TwoView
PlantriP.Viewers.3D:	MiniJmolViewer RasmolViewer
PlantriP.Viewers.xD:	TextViewer
PlantriP.ForExternal:	true


External.Title:		external generator
External.ConfigPanel:	cage.generator.ExternalPanel
External.Viewers.2D:	TwoView
External.Viewers.3D:	MiniJmolViewer RasmolViewer
External.Viewers.xD:	TextViewer



# A viewer -- again we need some more information about each one:
# - its Java class -- must implement cage.CaGeViewer
TextViewer.Class:	cage.viewer.TextViewer
# - its name as used in the output selection window
TextViewer.Title:	text viewer
# - more options may of course be used by the viewer itself


# The 3D viewer called "Jmol applet" in CaGe.
MiniJmolViewer.Class:	cage.viewer.MiniJmolViewer
MiniJmolViewer.Title:	Jmol Applet
MiniJmolViewer.Width:	550
MiniJmolViewer.Height:	500
MiniJmolViewer.Zoom:	0.75
MiniJmolViewer.AtomSize: 0.75

# The 3D viewer called "Jmol viewer" in CaGe.
CaGeJmolViewer.Class:	cage.viewer.CaGeJmolViewer
CaGeJmolViewer.Title:	Jmol Viewer
CaGeJmolViewer.Width:	550
CaGeJmolViewer.Height:	500
CaGeJmolViewer.Zoom:	0.75
CaGeJmolViewer.AtomSize: 0.75


# CaGe's own 2D viewer.
TwoView.Class:	cage.viewer.TwoView
TwoView.Title:		TwoView
# The size of the TwoView diagram panel (the display without controls)
TwoView.Width:		550
TwoView.Height:		400
# The number of "schlegel-vertex-*.gif" files in the Images directory
# (numbers 1 to <MaxVertexSize> replace the asterisk).
# Don't increase this without providing more vertex images.
TwoView.MaxVertexSize:	6
# The initial vertex size (1 to <MaxVertexSize>)
TwoView.VertexSize:	2
# Should vertex numbers be shown? If yes, TwoView might increase the
# vertex size until displaying numbers makes sense.
TwoView.ShowNumbers:	false
# The default edge brightness (0.0 to 0.75)
TwoView.EdgeBrightness:	0.75
# The default edge width (0 to 9)
TwoView.EdgeWidth:	4
# The following values are used in the PS code written by TwoView,
# they have no effect in the on-screen display. They are default
# values for the three colours used when painting vertices:
# the first two define the blending fill in the interior of vertex symbols,
# the third is the font colour of vertex numbers.
# The colour system used is RGB, values range from 0 to 1, 0 being "dark".
TwoView.VertexColor1:	1.0 0.650 0.395
TwoView.VertexColor2:	1.0 0.775 0.620
TwoView.VertexNumberColor:  0.25 0.25 1.0


# CaGe's rasmol integration.
RasmolViewer.Class:	cage.viewer.RasmolViewer
RasmolViewer.Title:	Rasmol
# the interval, in milliseconds, in which Rasmol's output
# is to be checked for questions requiring a user response
RasmolViewer.WatchInterval:	500


